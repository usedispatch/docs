"use strict";(self.webpackChunkdispatch_docs=self.webpackChunkdispatch_docs||[]).push([[845],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>h});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=o.createContext({}),l=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=l(e.components);return o.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),d=l(n),h=r,m=d["".concat(p,".").concat(h)]||d[h]||u[h]||i;return n?o.createElement(m,a(a({ref:t},s),{},{components:n})):o.createElement(m,a({ref:t},s))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=d;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:r,a[1]=c;for(var l=2;l<i;l++)a[l]=n[l];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},64:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var o=n(7462),r=(n(7294),n(3905));const i={},a="Dispatch Protocol Forums React SDK",c={unversionedId:"developer/forums_react",id:"developer/forums_react",title:"Dispatch Protocol Forums React SDK",description:"To ease integration into your website, the Dispatch Forums React SDK is a simple component library that provides instant forum functionality with just a few components.",source:"@site/docs/developer/forums_react.md",sourceDirName:"developer",slug:"/developer/forums_react",permalink:"/docs/developer/forums_react",draft:!1,editUrl:"https://github.com/usedispatch/docs/docs/developer/forums_react.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Events",permalink:"/docs/developer/events"},next:{title:"MessageAccount",permalink:"/docs/developer/message"}},p={},l=[{value:"<code>DispatchProvider</code>",id:"dispatchprovider",level:2},{value:"<code>ForumView</code>",id:"forumview",level:2},{value:"<code>TopicView</code>",id:"topicview",level:2}],s={toc:l};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"dispatch-protocol-forums-react-sdk"},"Dispatch Protocol Forums React SDK"),(0,r.kt)("p",null,"To ease integration into your website, the Dispatch Forums React SDK is a simple component library that provides instant forum functionality with just a few components."),(0,r.kt)("h2",{id:"dispatchprovider"},(0,r.kt)("inlineCode",{parentName:"h2"},"DispatchProvider")),(0,r.kt)("p",null,"DispatchProvider is the main component that is used to provide access to the Dispatch components. Your application should be wrapped in a DispatchProvider, but has access to the wallet and connection. DispatchProps should be passed in with desired path URLs, wallet, and connection. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"  const dispatchProps: DispatchAppProps = {\n    wallet: wallet,\n    connection: connection,\n    buildForumPath: buildForumPath,\n    buildTopicPath: buildTopicPath,\n    children: children,\n    cluster: cluster,\n  };\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"    <DispatchProvider {...dispatchProps}>\n        {children}\n    </DispatchProvider>\n")),(0,r.kt)("p",null,"Here's a sample implementation of ",(0,r.kt)("inlineCode",{parentName:"p"},"buildForumPath")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"buildTopicPath"),". These are the paths used within the components to link pages. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"  function buildForumPath(collectionId: string) {\n    return `${forumURL}/${collectionId}`;\n  }\n\n  function buildTopicPath(collectionId: string, topicId: number) {\n    return `${forumURL}/${collectionId}${topicURL}/${topicId}`;\n  }\n")),(0,r.kt)("h2",{id:"forumview"},(0,r.kt)("inlineCode",{parentName:"h2"},"ForumView")),(0,r.kt)("p",null,"This component is used to display the forum, it takes in a ",(0,r.kt)("inlineCode",{parentName:"p"},"collectionId")," parameter as a string which should be a public key. The path defined in ",(0,r.kt)("inlineCode",{parentName:"p"},"buildForumPath")," will be used to navigate to the forum."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"    <ForumView collectionId={collectionId} />\n")),(0,r.kt)("h2",{id:"topicview"},(0,r.kt)("inlineCode",{parentName:"h2"},"TopicView")),(0,r.kt)("p",null,"This main component is used to display the forum, it takes in a ",(0,r.kt)("inlineCode",{parentName:"p"},"collectionId")," parameter as a string which should be a public key and a ",(0,r.kt)("inlineCode",{parentName:"p"},"topicId")," parameter as a number. The path defined in ",(0,r.kt)("inlineCode",{parentName:"p"},"buildTopicPath")," should point to where this component is being used. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"    <TopicView collectionId={collectionId} topicId={topicId} />\n")),(0,r.kt)("p",null,"Below is a sample ",(0,r.kt)("inlineCode",{parentName:"p"},"DispatchApp.tsx")," file which uses the DispatchProvider component, which you can use to wrap the application in. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'import { ReactNode, useEffect } from "react";\nimport { DispatchProvider, DispatchAppProps } from "@usedispatch/forum";\nimport { useConnection, useWallet } from "@solana/wallet-adapter-react";\nimport * as web3 from "@solana/web3.js";\nimport { useRouter } from "next/router";\ninterface Props {\n  forumURL: string;\n  topicURL: string;\n  children?: ReactNode | ReactNode[];\n  cluster: web3.Cluster;\n}\n\nconst DispatchApp = ({\n  forumURL,\n  topicURL,\n  children,\n  cluster,\n  ...props\n}: Props) => {\n  const { connection } = useConnection();\n  const wallet = useWallet();\n  const router = useRouter();\n\n  function buildForumPath(collectionId: string) {\n    return `${forumURL}/${collectionId}`;\n  }\n\n  function buildTopicPath(collectionId: string, topicId: number) {\n    return `${forumURL}/${collectionId}${topicURL}/${topicId}`;\n  }\n\n// add this useEffect for nextJS apps only...\n  useEffect(() => {\n    const handleRouteChange = () => {\n      router.push(window.location)\n    };\n\n    window.addEventListener("popstate", handleRouteChange);\n    // If the component is unmounted, unsubscribe\n    // from the event with the `off` method:\n    return () => {\n      window.removeEventListener("popstate", handleRouteChange);\n    };\n  }, [router]);\n\n  const dispatchProps: DispatchAppProps = {\n    wallet: wallet,\n    connection: connection,\n    buildForumPath: buildForumPath,\n    buildTopicPath: buildTopicPath,\n    children: children,\n    cluster: cluster,\n  };\n\n  return <DispatchProvider {...dispatchProps}>{children}</DispatchProvider>;\n};\n\nexport default DispatchApp;\n\n')))}u.isMDXComponent=!0}}]);